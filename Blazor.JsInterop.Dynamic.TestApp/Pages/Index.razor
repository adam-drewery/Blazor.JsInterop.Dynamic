@page "/"

@inject DynamicJsRuntime JsRuntime

<button style="width: 100%; font-size: xxx-large" @onclick="ShowDialog">Run Tests</button>

<div>
    <h2 style="font-family: monospace">.NET Logs</h2>
    @foreach (var log in _logs)
    {
        <h4 style="font-family: monospace">@log</h4>
    }
</div>
<div id="js-logs">
    <h2 style="font-family: monospace">Javascript Logs</h2>
</div>



@code {

	readonly IList<string> _logs = new List<string>();

	private async Task ShowDialog()
	{
		var reference = await JsRuntime.InvokeAsync("createTestObject", "example string  1");

		await reference.actionTest("example string 2", new Action(() => _logs.Add("callback action called")));

		await reference.actionWithArgumentTest("example string 3", new Action<string>(x => _logs.Add("callback action called with argument: " + x)));

		var funcResult = await reference.funcTest(12);
		_logs.Add("func result: " + funcResult);

		var otherReference = await reference.returnObjectTest("example string 4");
		await otherReference.actionTest("example string 5", new Action(() => _logs.Add("callback action called from child object")));

		var someValue = otherReference.someValue;
		_logs.Add("property on returned object: " + someValue);
	}

}